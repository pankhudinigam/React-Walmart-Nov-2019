{"version":3,"sources":["logo.svg","components/Hello.js","components/Counter.js","hoc/SimpleHOC.jsx","model/Customer.js","components/CustomerForm.jsx","components/ListCustomers.jsx","components/Search.jsx","components/ReduxDemo.jsx","store/action-creators.js","components/CustomerDetails.jsx","components/ProtectedRoute.jsx","App.js","serviceWorker.js","store/store.js","index.js"],"names":["module","exports","Hello","props","message","Date","toTimeString","children","SimpleHOC","WrappedComponent","style","border","state","count","inc","evt","this","setState","console","log","decr","change","parseInt","target","value","update","valueRef","bind","title","onClick","type","onChange","ref","Component","Customer","id","name","location","CustomerForm","customer","propertyName","save","onSave","initState","onCancel","withRouter","ListCustomer","data","addMode","selectedCustomer","delete","index","a","preventDefault","Axios","url","copy","splice","alert","add","post","customers","push","edit","updatedCustomer","put","findIndex","item","renderCustomers","map","className","key","href","to","addNew","process","get","response","display","flexFlow","justifyContent","length","PureComponent","Search","useState","text","setText","results","setResults","params","action","origin","limit","search","placeholder","ReduxDemo","fetch","ctr","connect","dispatch","payload","CustomerDetails","match","isAuth","component","path","exact","App","src","logo","alt","rel","basename","render","Boolean","window","hostname","msg","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","getState","result","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ad3005c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\n\r\n\r\nconst Hello = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Hello {props.message}</h3>\r\n            <p>This is a react functional component</p>\r\n            <p>Generated Time {new Date().toTimeString()}</p>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Hello;\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport SimpleHOC from '../hoc/SimpleHOC';\r\n//bind\r\n// arrow functions(ES6)\r\n\r\nclass Counter extends Component{\r\n\r\n    //ES 7\r\n    state = {\r\n        count: 5\r\n    };\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.inc = this.inc.bind(this);\r\n        //ES6\r\n        // this.state = {\r\n        //     count : 5\r\n        // };\r\n    }\r\n\r\n\r\n    inc = function(evt){\r\n        //console.log(\"in inc: \", evt);\r\n        //this.state.count++;\r\n\r\n        //ASync\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        }, () => {\r\n            console.log(this.state.count);\r\n        });\r\n        \r\n    }\r\n    //ES7\r\n    decr = ()=>{\r\n\r\n        this.setState({\r\n            count: this.state.count - 1\r\n        }, () => {\r\n            console.log(this.state.count);\r\n        });\r\n    }\r\n\r\n    change = (evt) => {\r\n\r\n        this.setState({\r\n            count: parseInt(evt.target.value) \r\n        });\r\n    }\r\n\r\n    update = () => {\r\n        this.setState({\r\n            count: parseInt(this.valueRef.value)\r\n        })\r\n    }\r\n    // setRef = (inpRef) => {\r\n    //     this.valueRef = inpRef;\r\n    // }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div>\r\n                <h4>Counter =>  {this.props.title}</h4>\r\n                <p>Count: {this.state.count}</p>\r\n                <div>\r\n                    <button onClick={this.inc}>Increment</button>&nbsp; &nbsp;\r\n                    <button onClick={this.decr}>Decrement</button>\r\n                </div>\r\n                <div>\r\n                    {/* Controlled Input */}\r\n                    Count: <input type=\"number\" \r\n                            value={this.state.count} onChange={this.change}/>\r\n                </div>\r\n                <div>\r\n                    {/* Uncontrolled Input */}\r\n                    Value: <input type=\"number\" ref={(ref) => {this.valueRef = ref}} /> &nbsp;\r\n                    <button onClick={this.update}>Update</button>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SimpleHOC(Counter);","import React from 'react';\r\n\r\n//HOC\r\nconst SimpleHOC = (WrappedComponent) => {\r\n    //returns component\r\n    return (props) => {\r\n\r\n        return (\r\n            <div style={{border: \"2px solid red\"}}>\r\n                <WrappedComponent {...props}/>\r\n            </div>\r\n        );\r\n\r\n    }\r\n} \r\n\r\nexport default SimpleHOC;","export class Customer{\r\n\r\n    constructor(id, name, location){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.location = location;\r\n    }\r\n\r\n    //functions\r\n\r\n}","import React, {Component} from 'react';\r\nimport { Customer } from '../model/Customer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass CustomerForm extends Component{\r\n\r\n    state = {\r\n        customer: new Customer(0, \"\", \"\")\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"CustomerForm constructor:\", this.props);\r\n\r\n        this.initState = {...this.state};\r\n        if(this.props.customer){\r\n            this.state.customer = this.props.customer;\r\n        }\r\n    }\r\n    // static getDerivedStateFromProps(nextProps, currentState){\r\n\r\n    //     console.log(\"getDerivedStateFromProps\");\r\n    //     if(nextProps.customer && currentState.customer.id !== nextProps.customer.id){\r\n            \r\n    //         return {\r\n    //             customer: nextProps.customer\r\n    //         };\r\n    //     }\r\n    //     else{\r\n    //         return null;\r\n    //     }\r\n    // }\r\n\r\n    change = (evt) => {\r\n\r\n        const value = evt.target.value;\r\n\r\n        const customer = {...this.state.customer};\r\n        const propertyName = evt.target.name;\r\n        if(propertyName === \"id\"){\r\n            customer[propertyName] = parseInt(value);\r\n        }\r\n        else{\r\n            customer[propertyName] = value\r\n        }\r\n         \r\n\r\n        this.setState({\r\n            customer\r\n        });\r\n\r\n    }\r\n\r\n    save = () => {\r\n\r\n        this.props.onSave(this.state.customer);\r\n        this.setState(this.initState);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h4>Customer Form</h4>\r\n                <fieldset>\r\n                    <p>\r\n                        Id: \r\n                    </p>\r\n                    <div>\r\n                        <input type=\"number\" name=\"id\"\r\n                            value={this.state.customer.id} onChange={this.change}/>\r\n                    </div>\r\n                    <p>\r\n                        Name: \r\n                    </p>\r\n                    <div>\r\n                        <input name=\"name\" value={this.state.customer.name} onChange={this.change}/>\r\n                    </div>\r\n                    <p>\r\n                        Location: \r\n                    </p>\r\n                    <div>\r\n                        <input  name=\"location\" value={this.state.customer.location} onChange={this.change}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.save}>Save</button> &nbsp; &nbsp;\r\n                        <button onClick={() => {this.props.onCancel()}}>Cancel</button>\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCustomerForm.propTypes = {\r\n\r\n    onSave: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n    title: PropTypes.string\r\n\r\n}\r\n\r\n\r\n\r\nexport default withRouter(CustomerForm);","import React, { Component, PureComponent } from 'react';\r\nimport { Customer } from '../model/Customer';\r\nimport './ListCustomers.css';\r\nimport CustomerForm from './CustomerForm';\r\nimport Axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ListCustomer extends PureComponent {\r\n\r\n    //immutable\r\n    state = {\r\n        data: [],\r\n        addMode: false,\r\n        selectedCustomer: null\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n        this.url = process.env.REACT_APP_CUSTOMERS_URL;\r\n        console.log(this.url);\r\n        // this.state.data.push(new Customer(1, \"Google\", \"Bangalore\"));\r\n        // this.state.data.push(new Customer(2, \"Facebook\", \"Bangalore\"));\r\n        // this.state.data.push(new Customer(3, \"Reliance\", \"Mumbai\"));\r\n        // this.state.data.push(new Customer(4, \"Infosys\", \"Bangalore\"));\r\n        console.log(\"[ListCustomer constructor]: \", this.props);\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        console.log(\"[ListCustomer componentWillMount]\")\r\n    }\r\n    async componentDidMount() {\r\n        console.log(\"[ListCustomer componentDidMount]\");\r\n\r\n        try {\r\n            const response = await Axios.get(this.url);\r\n            this.setState({\r\n                data: response.data\r\n            })\r\n        } catch (error) {\r\n            alert(\"Failed to fetch data\");\r\n        }\r\n    }\r\n    componentWillReceiveProps() {\r\n        console.log(\"[ListCustomer componentWillReceiveProps]\")\r\n    }\r\n    // shouldComponentUpdate(){\r\n    //     console.log(\"[ListCustomer shouldComponentUpdate]\")\r\n    //     return true;\r\n    // }\r\n    componentWillUpdate() {\r\n        console.log(\"[ListCustomer componentWillUpdate]\")\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(\"[ListCustomer componentDidUpdate]\")\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    delete = async (index, evt) => {\r\n\r\n        evt.preventDefault();\r\n        //console.log(index);\r\n        // this.state.data.splice(index, 1);\r\n        // this.setState({\r\n        //     data: this.state.data\r\n        // });\r\n\r\n        try {\r\n\r\n            const id = this.state.data[index].id;\r\n            const response = await Axios.delete(this.url + \"/\" + id);\r\n            //create a copy\r\n            const copy = [...this.state.data];\r\n            copy.splice(index, 1);\r\n            this.setState({\r\n                data: copy\r\n            });\r\n\r\n        } catch (error) {\r\n            alert(\"Failed to delete\");\r\n        }\r\n    }\r\n    add = async (customer) => {\r\n\r\n        try {\r\n\r\n            const response = await Axios.post(this.url, customer);\r\n            alert(\"saved\");\r\n            const customers = [...this.state.data];\r\n            customers.push(customer);\r\n            this.setState({\r\n                data: customers\r\n            });\r\n\r\n        } catch (error) {\r\n            alert(\"Failed to save\");\r\n        }\r\n\r\n\r\n    }\r\n    edit = (index, evt) => {\r\n\r\n        evt.preventDefault();\r\n        this.setState({\r\n            selectedCustomer: this.state.data[index]\r\n        });\r\n\r\n    }\r\n    update = async (updatedCustomer) => {\r\n\r\n\r\n        try {\r\n\r\n            const response = await Axios.put(this.url, updatedCustomer);\r\n            const customers = [...this.state.data];\r\n            const index = customers.findIndex(item => item.id === this.state.selectedCustomer.id);\r\n            customers[index] = updatedCustomer;\r\n\r\n            this.setState({\r\n                data: customers,\r\n                selectedCustomer: null\r\n            });\r\n            alert(\"saved\");\r\n\r\n        } catch (error) {\r\n            alert(\"failed to save\");\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    // nav = (id) =>{\r\n    //     window.localStorage.setItem(\"custID\", id);\r\n    // }\r\n    renderCustomers = () => {\r\n        return this.state.data.map((item, index) => {\r\n            return (\r\n                <div className=\"customer\" key={item.id}>\r\n                    <p>ID: {item.id}</p>\r\n                    <p>Name: {item.name}</p>\r\n                    <p>Location: {item.location}</p>\r\n                    <div>\r\n                        {/* <button onClick={this.delete.bind(this, index)}>Delete</button> */}\r\n                        {/* <button onClick={() => {this.delete(index)}}>Delete</button> */}\r\n                        <a href=\"#\" onClick={(evt) => { this.delete(index, evt) }}>Delete</a>\r\n                        &nbsp;\r\n                        <a href=\"#\" onClick={(evt) => { this.edit(index, evt) }}>Edit</a>\r\n                        &nbsp;\r\n                        <Link to={\"customers\" + \"/\" + item.id}>Details</Link>\r\n                        {/* <Link to={\"customersDetails\"} onClick={()=> {this.nav(item.id)}}>Details</Link> */}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    addNew = (evt) => {\r\n\r\n        evt.preventDefault();\r\n        this.setState({\r\n            addMode: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"[ListCustomer render]\")\r\n\r\n        return (\r\n            <div>\r\n                <h2>List Customers</h2>\r\n                <p>The list of customers</p>\r\n                <p>\r\n                    <a href=\"#\" onClick={this.addNew}>Add New</a>\r\n                </p>\r\n                <div style={{ display: 'flex', flexFlow: 'row wrap', justifyContent: 'center' }}>\r\n                    {this.state.data.length !== 0 ? this.renderCustomers() : <p>No Customers</p>}\r\n                </div>\r\n                <div>\r\n                    {this.state.addMode ?\r\n                        <CustomerForm onSave={this.add}\r\n                            onCancel={() => { this.setState({ addMode: false }) }} /> : null}\r\n                </div>\r\n                <div>\r\n                    {this.state.selectedCustomer ?\r\n                        <CustomerForm\r\n                            key={this.state.selectedCustomer.id}\r\n                            customer={this.state.selectedCustomer}\r\n                            onSave={this.update}\r\n                            onCancel={() => this.setState({ selectedCustomer: null })} /> : null}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ListCustomer;","import React, {useState} from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\n// https://en.wikipedia.org/w/api.php?action=opensearch&origin=*&search=react;\r\n\r\nconst Search = () => {\r\n\r\n    // state = {\r\n    //     text: '',\r\n    //     results: [] \r\n    // }\r\n\r\n    const [text, setText] = useState('');\r\n    const [results, setResults] = useState([]);\r\n\r\n    \r\n    function change(evt){\r\n        setText(evt.target.value);\r\n    }\r\n    async function search(){\r\n\r\n        const url = \"https://en.wikipedia.org/w/api.php\";\r\n        const params = {\r\n            action: \"opensearch\",\r\n            origin: \"*\",\r\n            limit: 30,\r\n            search: text\r\n        };\r\n        // Axios\r\n        //     .get(url, {params: params})\r\n        //     .then((resp) => {\r\n        //         console.log(resp);\r\n        //     }, \r\n        //     (resp) => {\r\n        //         console.log(\"error: \", resp);\r\n        //     });\r\n\r\n        try {\r\n            const response = await Axios.get(url, {params: params});\r\n            console.log(\"result:\", response.data);\r\n            setResults(response.data[1]);\r\n        } catch (error) {\r\n            alert(\"error fetching data\");\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Wiki Serach</h3>\r\n            <div>\r\n                <input type=\"search\" placeholder=\"Search\" value={text} onChange={change}/>\r\n                &nbsp;\r\n                <button onClick={search}>Wiki Search</button>\r\n            </div>\r\n            <div>\r\n                {/* Results */}\r\n                <h4>Search Results for {text}</h4>\r\n                {results.map((item, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <p>{item}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import {createINCaction, createDECRaction} from '../store/action-creators';\r\nimport * as actionCreators from '../store/action-creators';\r\n\r\n\r\nclass ReduxDemo extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetch();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Redux Demo</h3>\r\n                <h4>Count: {this.props.ctr}</h4>\r\n                <div>\r\n                    <button onClick={() => { this.props.inc() }}>Increment</button>\r\n                    <button onClick={this.props.decr}>Decrement</button>\r\n                </div>\r\n                <div>\r\n                    {this.props.customers.map((item, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <p>ID: {item.id}</p>\r\n                                <p>Name: {item.name}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n//Mapping Redux State to React props\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ctr: state.count,\r\n        customers: state.customers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        // inc: () => {dispatch({type: \"INC_CTR\"})},\r\n        // decr: () => {dispatch({type: \"DECR_CTR\"})}\r\n\r\n        inc: () => { dispatch(actionCreators.createINCaction()) },\r\n        decr: () => { dispatch(actionCreators.createDECRaction()) },\r\n        fetch: () => { dispatch(actionCreators.createFetchaction()) }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxDemo);\r\n\r\n","import Axios from 'axios';\r\n\r\nexport const createINCaction = () => {\r\n    return {\r\n        type: \"INC_CTR\"\r\n    }\r\n}\r\n\r\nexport const createDECRaction = () => {\r\n    return {\r\n        type: \"DECR_CTR\"\r\n    }\r\n}\r\n\r\nexport const createFetchaction = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const response = await Axios.get(process.env.REACT_APP_CUSTOMERS_URL);\r\n        dispatch({\r\n            type: \"FETCH_CUSTOMERS\",\r\n            payload: response.data\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\n\r\nconst CustomerDetails = (props) => {\r\n\r\n    console.log(\"CustomerDetails: \", props);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Customer Details: {props.match.params.id}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomerDetails;","import React, {Fragment} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst ProtectedRoute = (props) => {\r\n\r\n    const Component = props.component;\r\n    \r\n    return (\r\n        <Fragment>\r\n                <Route path={props.path} exact={props.exact}>\r\n                    {props.isAuth ? <Component/> : <Redirect to=\"/\"/>}\r\n                </Route>\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isAuth: state.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProtectedRoute);\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Hello from './components/Hello';\nimport Counter from './components/Counter';\nimport ListCustomer from './components/ListCustomers';\nimport Search from './components/Search';\nimport ReduxDemo from './components/ReduxDemo';\n\nimport {BrowserRouter, MemoryRouter, Link, Route} from 'react-router-dom';\nimport CustomerDetails from './components/CustomerDetails';\nimport ProtectedRoute from './components/ProtectedRoute';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <section>\n        {/* <Hello message=\"React\"/>\n        <Hello message=\"JSX\"/>\n        <Hello message=\"Inner content\">\n          <p>This is some inner content</p>\n        </Hello> */}\n\n        {/* <Counter title=\"Time\"/> */}\n        {/* <Counter title=\"Watch\"/> */}\n\n        {/* <ListCustomer/> */}\n        {/* <Search/> */}\n        {/* <ReduxDemo/> */}\n        \n      </section>\n        \n      <section>\n        <BrowserRouter basename=\"/react/\">\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/counter\">Counter</Link>\n              </li>\n              <li>\n                <Link to=\"/customers\">Customers</Link>\n              </li>\n              <li>\n                <Link to=\"/redux\">Redux</Link>\n              </li>\n              <li>\n                <Link to=\"/search\">Search</Link>\n              </li>\n            </ul>\n\n            <section>\n                <Route path=\"/\" exact component={Hello}/>\n                {/* <Route path=\"/counter\" component={Counter}/> */}\n                <Route path=\"/counter\" render={() => <Counter title=\"Watch\"/>}/>\n                {/* <Route path=\"/customers\" exact component={ListCustomer}/> */}\n                <ProtectedRoute path=\"/customers\" exact component={ListCustomer}/>\n                <Route path=\"/customers/:id\" component={CustomerDetails}/>\n                <Route path=\"/redux\" component={ReduxDemo}/>\n                <Route path=\"/search\" component={Search}/>\n            </section>\n            \n\n        </BrowserRouter>\n      </section>  \n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n// const redux = require('redux');\r\n// const createStore = redux.createStore;\r\n\r\n//initial State\r\nconst initState = {\r\n    count: 10,\r\n    msg: \"Hello Redux\",\r\n    customers: [],\r\n    isAuth: true\r\n}\r\n//Reducer\r\nconst reducer = (state = initState, action) => {\r\n\r\n    if(action.type === \"INC_CTR\"){\r\n\r\n        return {\r\n            ...state,\r\n            count: state.count + 1, \r\n        }\r\n    }\r\n    if(action.type === \"DECR_CTR\"){\r\n\r\n        return {\r\n            ...state,\r\n            count: state.count - 1\r\n        }\r\n    }\r\n    if(action.type === \"UPD_BY_CTR\"){\r\n\r\n        return {\r\n            ...state,\r\n            count: state.count + action.value\r\n        }\r\n    }\r\n    if(action.type === \"FETCH_CUSTOMERS\"){\r\n\r\n        return {\r\n            ...state,\r\n            customers: action.payload\r\n        }\r\n    }\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\n//Middleware\r\n\r\nconst logger = (store) => {\r\n    return (next) => {\r\n        return (action) => {\r\n            // if action is an object\r\n            console.log(\"action:\", action);\r\n            console.log(\"state:\", store.getState());\r\n            const result = next(action);\r\n            console.log(\"updated state:\", store.getState());\r\n            return result;\r\n\r\n            // if action is a function\r\n            // action();\r\n        }\r\n    }\r\n}\r\n\r\n//Store\r\n// export const store = createStore(reducer, \r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n//export const store = createStore(reducer, applyMiddleware(logger));\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducer, \r\n                composeEnhancers(applyMiddleware(logger, thunk)));\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './store/store';\nimport {Provider} from 'react-redux';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Provider store={store}> <App /> </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}